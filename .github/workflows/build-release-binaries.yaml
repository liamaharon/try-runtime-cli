name: Build and Attach Binaries to Release

on:
  release:
    types:
      - created

jobs:
  build_and_upload:
    strategy:
      matrix:
        platform: 
          - { os: ubuntu-latest, target: x86_64-unknown-linux-musl }
          - { os: macos-latest, target: x86_64-apple-darwin }

    runs-on: ${{ matrix.platform.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install Protoc
      uses: arduino/setup-protoc@v1
      with:
        version: "3.6.1"

    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true

    - name: Build Rust project (musl)
      if: matrix.platform.os == 'ubuntu-latest'
      run: |
        docker run --rm -v "${{ github.workspace }}":/home/rust/src ekidd/rust-musl-builder cargo build --release --target ${{ matrix.platform.target }}

    - name: Build Rust project (apple)
      if: matrix.platform.os == 'macos-latest'
      run: cargo build --release --target ${{ matrix.platform.target }}

    - name: Upload Binary to Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./target/${{ matrix.platform.target }}/release/try-runtime
        asset_name: try-runtime-${{ matrix.platform.target }}
        asset_content_type: application/octet-stream
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
