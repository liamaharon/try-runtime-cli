name: Rust checks

on:
  pull_request:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

env:
  RUST_BACKTRACE: 1
  # pin nightly to avoid constantly throwing out cache
  TOOLCHAIN_FMT: nightly-2024-04-09

jobs:
  doc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown
      - uses: Swatinem/rust-cache@v2
        with:
          key: check-doc-v0
      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          version: "3.6.1"
      - name: cargo doc
        run: RUSTFLAGS="-D warnings" cargo doc --locked

  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust ${{ env.TOOLCHAIN_FMT }}
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.TOOLCHAIN_FMT }}
          targets: wasm32-unknown-unknown
          components: rustfmt, clippy, rust-src
      - uses: Swatinem/rust-cache@v2
        with:
          key: fmt-v0
      - name: cargo fmt
        run: cargo +${{ env.TOOLCHAIN_FMT }} fmt --all -- --check

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: wasm32-unknown-unknown
          components: rustfmt, clippy, rust-src
      - uses: Swatinem/rust-cache@v2
        with:
          key: clippy-v0
      - name: Install deps for musl build
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler musl-tools clang build-essential curl llvm-dev libclang-dev linux-headers-generic libsnappy-dev liblz4-dev libzstd-dev libgflags-dev zlib1g-dev libbz2-dev
          sudo ln -s /usr/bin/g++ /usr/bin/musl-g++
      - name: cargo clippy
        uses: actions-rs-plus/clippy-check@v2
        with:
          toolchain: stable
          args: --all-targets --all-features --locked --no-deps -- --deny warnings

  test:
    strategy:
      matrix:
        os: [ubuntu-latest]
        toolchain: [stable]
    runs-on: ${{ matrix.os }}
    env:
      RUSTFLAGS: "-Cdebug-assertions=y"
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust ${{ matrix.toolchain }}
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.toolchain }}
          targets: wasm32-unknown-unknown
      - uses: Swatinem/rust-cache@v2
      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          version: "3.6.1"
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          # this might remove tools that are actually needed,
          # if set to "true" but frees about 6 GB
          tool-cache: false

          # all of these default to true, but feel free to set to
          # "false" if necessary for your workflow
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true
      - name: build try-runtime-cli
        # this is required for testing
        # build --release or the execution time of the test is too long
        run: cargo build --release -p try-runtime-cli
      - name: cargo test
        run: cargo test --release
      - name: Check disk space
        run: df . -h
